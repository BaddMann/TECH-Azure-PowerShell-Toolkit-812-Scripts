apiVersion: v1
kind: Namespace
metadata:
  name: azure-toolkit
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: toolkit-config
  namespace: azure-toolkit
data:
  TOOLKIT_MODE: "distributed"
  LOG_LEVEL: "info"
  CACHE_TTL: "3600"
---
apiVersion: v1
kind: Secret
metadata:
  name: azure-credentials
  namespace: azure-toolkit
type: Opaque
stringData:
  AZURE_TENANT_ID: "your-tenant-id"
  AZURE_CLIENT_ID: "your-client-id"
  AZURE_CLIENT_SECRET: "your-client-secret"
  AZURE_SUBSCRIPTION_ID: "your-subscription-id"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: azure-toolkit-api
  namespace: azure-toolkit
  labels:
    app: azure-toolkit-api
spec:
  replicas: 3
  selector:
    matchLabels:
      app: azure-toolkit-api
  template:
    metadata:
      labels:
        app: azure-toolkit-api
    spec:
      containers:
      - name: api
        image: azure-enterprise-toolkit:latest
        ports:
        - containerPort: 5000
        envFrom:
        - configMapRef:
            name: toolkit-config
        - secretRef:
            name: azure-credentials
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 5000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /ready
            port: 5000
          initialDelaySeconds: 5
          periodSeconds: 5
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: azure-toolkit-worker
  namespace: azure-toolkit
spec:
  serviceName: toolkit-worker
  replicas: 5
  selector:
    matchLabels:
      app: azure-toolkit-worker
  template:
    metadata:
      labels:
        app: azure-toolkit-worker
    spec:
      containers:
      - name: worker
        image: azure-enterprise-toolkit:latest
        command: ["pwsh", "-Command", "./Start-Worker.ps1"]
        envFrom:
        - configMapRef:
            name: toolkit-config
        - secretRef:
            name: azure-credentials
        env:
        - name: WORKER_ID
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        resources:
          requests:
            memory: "512Mi"
            cpu: "500m"
          limits:
            memory: "1Gi"
            cpu: "1000m"
        volumeMounts:
        - name: script-storage
          mountPath: /azure-toolkit/scripts
        - name: worker-data
          mountPath: /azure-toolkit/data
  volumeClaimTemplates:
  - metadata:
      name: worker-data
    spec:
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: 10Gi
---
apiVersion: v1
kind: Service
metadata:
  name: azure-toolkit-api
  namespace: azure-toolkit
spec:
  selector:
    app: azure-toolkit-api
  ports:
    - protocol: TCP
      port: 80
      targetPort: 5000
  type: LoadBalancer
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: toolkit-maintenance
  namespace: azure-toolkit
spec:
  schedule: "0 2 * * *"
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - name: maintenance
            image: azure-enterprise-toolkit:latest
            command: ["pwsh", "-Command", "./Run-Maintenance.ps1"]
            envFrom:
            - configMapRef:
                name: toolkit-config
            - secretRef:
                name: azure-credentials
          restartPolicy: OnFailure
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: toolkit-api-hpa
  namespace: azure-toolkit
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: azure-toolkit-api
  minReplicas: 3
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: azure-toolkit-ingress
  namespace: azure-toolkit
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    cert-manager.io/cluster-issuer: letsencrypt-prod
spec:
  tls:
  - hosts:
    - azure-toolkit.yourdomain.com
    secretName: azure-toolkit-tls
  rules:
  - host: azure-toolkit.yourdomain.com
    http:
      paths:
      - path: /api
        pathType: Prefix
        backend:
          service:
            name: azure-toolkit-api
            port:
              number: 80
      - path: /
        pathType: Prefix
        backend:
          service:
            name: azure-toolkit-ui
            port:
              number: 3000