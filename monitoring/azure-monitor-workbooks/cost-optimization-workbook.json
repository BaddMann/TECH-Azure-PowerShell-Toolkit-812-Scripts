{
  "version": "Notebook/1.0",
  "items": [
    {
      "type": 1,
      "content": {
        "json": "# Azure Cost Optimization Dashboard\n\nThis workbook provides comprehensive cost analysis and optimization recommendations for your Azure environment, helping identify cost-saving opportunities and spending trends.\n\n---"
      },
      "name": "text - cost-title"
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "parameters": [
          {
            "id": "cost-timerange-param",
            "version": "KqlParameterItem/1.0",
            "name": "TimeRange",
            "type": 4,
            "isRequired": true,
            "value": {
              "durationMs": 2592000000
            },
            "typeSettings": {
              "selectableValues": [
                {
                  "durationMs": 604800000
                },
                {
                  "durationMs": 1209600000
                },
                {
                  "durationMs": 2592000000
                },
                {
                  "durationMs": 5184000000
                },
                {
                  "durationMs": 7776000000
                }
              ]
            }
          },
          {
            "id": "cost-subscription-param",
            "version": "KqlParameterItem/1.0",
            "name": "Subscriptions",
            "type": 6,
            "isRequired": true,
            "multiSelect": true,
            "quote": "'",
            "delimiter": ",",
            "query": "Resources\n| distinct subscriptionId\n| project value = subscriptionId, label = subscriptionId",
            "crossComponentResources": [
              "value::selected"
            ],
            "typeSettings": {
              "additionalResourceOptions": [
                "value::all"
              ],
              "selectAllValue": "*"
            },
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources",
            "value": [
              "value::all"
            ]
          }
        ],
        "style": "pills",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources"
      },
      "name": "cost-parameters"
    },
    {
      "type": 1,
      "content": {
        "json": "## Resource Cost Analysis"
      },
      "name": "text - resource-analysis"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "Resources\n| where subscriptionId in ({Subscriptions})\n| summarize ResourceCount = count() by type\n| order by ResourceCount desc\n| take 15\n| project ResourceType = type, Count = ResourceCount",
        "size": 0,
        "title": "Top Resource Types by Count",
        "timeContext": {
          "durationMs": 2592000000
        },
        "timeContextFromParameter": "TimeRange",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "value::selected"
        ],
        "visualization": "barchart"
      },
      "customWidth": "50",
      "name": "query - resource-count"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "Resources\n| where subscriptionId in ({Subscriptions})\n| summarize ResourceCount = count() by resourceGroup\n| order by ResourceCount desc\n| take 15\n| project ResourceGroup = resourceGroup, Count = ResourceCount",
        "size": 0,
        "title": "Top Resource Groups by Resource Count",
        "timeContext": {
          "durationMs": 2592000000
        },
        "timeContextFromParameter": "TimeRange",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "value::selected"
        ],
        "visualization": "barchart"
      },
      "customWidth": "50",
      "name": "query - resource-groups"
    },
    {
      "type": 1,
      "content": {
        "json": "## Virtual Machine Cost Optimization"
      },
      "name": "text - vm-optimization"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "Resources\n| where subscriptionId in ({Subscriptions})\n| where type == \"microsoft.compute/virtualmachines\"\n| extend vmSize = properties.hardwareProfile.vmSize\n| extend powerState = properties.extended.instanceView.powerState.code\n| project name, resourceGroup, location, vmSize, powerState\n| summarize Count = count() by vmSize, powerState\n| order by Count desc",
        "size": 0,
        "title": "VM Sizes and Power States",
        "timeContext": {
          "durationMs": 2592000000
        },
        "timeContextFromParameter": "TimeRange",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "value::selected"
        ],
        "visualization": "table",
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "powerState",
              "formatter": 18,
              "formatOptions": {
                "thresholdsOptions": "colors",
                "thresholdsGrid": [
                  {
                    "operator": "==",
                    "thresholdValue": "PowerState/running",
                    "representation": "green",
                    "text": "Running"
                  },
                  {
                    "operator": "==",
                    "thresholdValue": "PowerState/stopped",
                    "representation": "red",
                    "text": "Stopped"
                  },
                  {
                    "operator": "==",
                    "thresholdValue": "PowerState/deallocated",
                    "representation": "orange",
                    "text": "Deallocated"
                  },
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "representation": "gray",
                    "text": "Unknown"
                  }
                ]
              }
            }
          ]
        }
      },
      "customWidth": "60",
      "name": "query - vm-analysis"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "Resources\n| where subscriptionId in ({Subscriptions})\n| where type == \"microsoft.compute/virtualmachines\"\n| where properties.extended.instanceView.powerState.code != \"PowerState/running\"\n| project name, resourceGroup, location, \n    vmSize = properties.hardwareProfile.vmSize,\n    powerState = properties.extended.instanceView.powerState.code\n| order by resourceGroup asc",
        "size": 0,
        "title": "Non-Running VMs (Cost Optimization Opportunity)",
        "timeContext": {
          "durationMs": 2592000000
        },
        "timeContextFromParameter": "TimeRange",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "value::selected"
        ],
        "visualization": "table",
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "name",
              "formatter": 13,
              "formatOptions": {
                "linkTarget": "Resource",
                "showIcon": true
              }
            }
          ]
        }
      },
      "customWidth": "40",
      "name": "query - non-running-vms"
    },
    {
      "type": 1,
      "content": {
        "json": "## Storage Cost Optimization"
      },
      "name": "text - storage-optimization"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "Resources\n| where subscriptionId in ({Subscriptions})\n| where type == \"microsoft.storage/storageaccounts\"\n| extend sku = properties.sku.name\n| extend tier = properties.sku.tier\n| extend kind = properties.kind\n| project name, resourceGroup, location, sku, tier, kind\n| summarize Count = count() by sku, tier\n| order by Count desc",
        "size": 0,
        "title": "Storage Account SKU Distribution",
        "timeContext": {
          "durationMs": 2592000000
        },
        "timeContextFromParameter": "TimeRange",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "value::selected"
        ],
        "visualization": "barchart"
      },
      "customWidth": "50",
      "name": "query - storage-sku"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "Resources\n| where subscriptionId in ({Subscriptions})\n| where type == \"microsoft.compute/disks\"\n| extend diskSizeGB = properties.diskSizeGB\n| extend diskState = properties.diskState\n| extend sku = properties.sku.name\n| project name, resourceGroup, diskSizeGB, diskState, sku\n| summarize TotalSizeGB = sum(diskSizeGB), Count = count() by diskState, sku\n| order by TotalSizeGB desc",
        "size": 0,
        "title": "Managed Disks by State and SKU",
        "timeContext": {
          "durationMs": 2592000000
        },
        "timeContextFromParameter": "TimeRange",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "value::selected"
        ],
        "visualization": "table"
      },
      "customWidth": "50",
      "name": "query - disk-analysis"
    },
    {
      "type": 1,
      "content": {
        "json": "## Unattached Resources (Cost Optimization Opportunities)"
      },
      "name": "text - unattached-resources"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "Resources\n| where subscriptionId in ({Subscriptions})\n| where type == \"microsoft.compute/disks\"\n| where properties.diskState == \"Unattached\"\n| extend diskSizeGB = properties.diskSizeGB\n| extend sku = properties.sku.name\n| project name, resourceGroup, location, diskSizeGB, sku\n| order by diskSizeGB desc",
        "size": 0,
        "title": "Unattached Managed Disks",
        "timeContext": {
          "durationMs": 2592000000
        },
        "timeContextFromParameter": "TimeRange",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "value::selected"
        ],
        "visualization": "table",
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "name",
              "formatter": 13,
              "formatOptions": {
                "linkTarget": "Resource",
                "showIcon": true
              }
            },
            {
              "columnMatch": "diskSizeGB",
              "formatter": 8,
              "formatOptions": {
                "palette": "redBright"
              }
            }
          ]
        }
      },
      "customWidth": "50",
      "name": "query - unattached-disks"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "Resources\n| where subscriptionId in ({Subscriptions})\n| where type == \"microsoft.network/publicipaddresses\"\n| where properties.ipConfiguration == \"\"\n| project name, resourceGroup, location, \n    allocationMethod = properties.publicIPAllocationMethod,\n    sku = properties.sku.name\n| order by resourceGroup asc",
        "size": 0,
        "title": "Unassigned Public IP Addresses",
        "timeContext": {
          "durationMs": 2592000000
        },
        "timeContextFromParameter": "TimeRange",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "value::selected"
        ],
        "visualization": "table",
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "name",
              "formatter": 13,
              "formatOptions": {
                "linkTarget": "Resource",
                "showIcon": true
              }
            }
          ]
        }
      },
      "customWidth": "50",
      "name": "query - unassigned-ips"
    },
    {
      "type": 1,
      "content": {
        "json": "## Resource Tagging for Cost Management"
      },
      "name": "text - tagging"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "Resources\n| where subscriptionId in ({Subscriptions})\n| extend hasOwnerTag = isnotempty(tags['Owner'])\n| extend hasCostCenterTag = isnotempty(tags['CostCenter'])\n| extend hasEnvironmentTag = isnotempty(tags['Environment'])\n| extend hasProjectTag = isnotempty(tags['Project'])\n| summarize \n    TotalResources = count(),\n    WithOwnerTag = countif(hasOwnerTag),\n    WithCostCenterTag = countif(hasCostCenterTag),\n    WithEnvironmentTag = countif(hasEnvironmentTag),\n    WithProjectTag = countif(hasProjectTag)",
        "size": 0,
        "title": "Resource Tagging Compliance",
        "timeContext": {
          "durationMs": 2592000000
        },
        "timeContextFromParameter": "TimeRange",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "value::selected"
        ],
        "visualization": "table"
      },
      "customWidth": "60",
      "name": "query - tagging-compliance"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "Resources\n| where subscriptionId in ({Subscriptions})\n| where isnull(tags) or array_length(todynamic(tostring(tags))) == 0\n| summarize UntaggedCount = count() by type\n| order by UntaggedCount desc\n| take 10",
        "size": 0,
        "title": "Top Untagged Resource Types",
        "timeContext": {
          "durationMs": 2592000000
        },
        "timeContextFromParameter": "TimeRange",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "value::selected"
        ],
        "visualization": "barchart"
      },
      "customWidth": "40",
      "name": "query - untagged-resources"
    },
    {
      "type": 1,
      "content": {
        "json": "## Cost Optimization Recommendations Summary\n\n### Key Opportunities:\n1. **Deallocate or right-size non-running VMs** - Review VMs that are stopped but not deallocated\n2. **Remove unattached resources** - Delete unattached disks and unassigned public IPs\n3. **Optimize storage tiers** - Review storage account SKUs and consider lifecycle policies\n4. **Improve resource tagging** - Implement cost center and owner tags for better cost allocation\n5. **Review oversized resources** - Analyze usage patterns to right-size virtual machines\n\n### Next Steps:\n- Set up Azure Advisor recommendations\n- Implement Azure Cost Management budgets and alerts\n- Create automated resource cleanup policies\n- Establish resource tagging governance"
      },
      "name": "text - recommendations"
    }
  ],
  "fallbackResourceIds": [
    "Azure Cost Management"
  ],
  "$schema": "https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json"
}